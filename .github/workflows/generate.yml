name: generate

on:
  push:
  release:
    types: [published]
  workflow_dispatch:
permissions:
  contents: write

jobs:
  generate:
    runs-on: ubuntu-latest

    steps:
      - name: checkout.
        uses: actions/checkout@v3
        with:
          fetch-depth: 0        
        env:
          GIT_TRACE: 0
          GIT_CURL_VERBOSE: 0
          
      - name: install pandoc
        run: |
          sudo apt-get update
          sudo apt-get install -y pandoc
          
      - name: convert markdown to html
        run: |
          mkdir -p html
          for file in data/*.md; do
            filename=$(basename "$file" .md)
            html_file="html/${filename}.html"
            pandoc "$file" --mathjax -s \
              --mathjax="https://cdnjs.cloudflare.com/ajax/libs/mathjax/3.2.0/es5/tex-mml-chtml.js" \
              -o "$html_file"
          done
      
      - name: generate md.map
        run: |
            mkdir -p html
            echo "https://docs.github.com/en/get-started/writing-on-github" >html/2004-03-09.html
            set +e  
            git add html/2004-03-09.html
            set -e
            rm data/md.map
            ls -1 html/*.html > data/md.map
            git status
        env:
            GH_TOKEN: ${{ github.token }}

      - name: Update md.map inside repo
        run: |
            git add .
            set +e  # Grep succeeds with nonzero exit codes to show results.
            git status
            git status . | grep 'modified\|new file'
            if [ $? -eq 0 ]
            then
                set -e
                echo "git commit and push generated md.map file."
                git config --global user.name  "md.map"
                git config --global user.email "noone@nowhere.github.com"
                git commit -am "updated on - $(date)"
                git push
            else
                set -e
                echo "no changes since last run."
            fi
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
